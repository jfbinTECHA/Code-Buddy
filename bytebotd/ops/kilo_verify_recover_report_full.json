{
  "name": "Bytebot Verify Recover Report Full",
  "type": "task",
  "commands": [
    "echo 'üîç Checking for ops controller files (depth ‚â§ 3)...'",
    "docker exec bytebot-desktop timeout 10 find /bytebot -maxdepth 3 -type f -iname '*ops*' 2>/dev/null | grep -v 'node_modules' | grep -v '.cache' | grep -v 'dist' || echo '‚ö†Ô∏è  No matching files or search timed out.'",
    "echo '‚úÖ File scan done. Now testing the ops controller endpoint...'",
    "status=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:9991/api/ops/health)",
    "if [ \"$status\" -eq 200 ]; then",
    "  result='‚úÖ Ops endpoint responding on port 9991 (HTTP 200)'",
    "  port=9991",
    "else",
    "  status2=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:9990/api/ops/health)",
    "  if [ \"$status2\" -eq 200 ]; then",
    "    result='‚úÖ Ops endpoint responding on port 9990 (HTTP 200)'",
    "    port=9990",
    "  else",
    "    echo '‚ùå Could not reach Bytebot Agent on ports 9991 or 9990.'",
    "    echo 'ü©∫ Attempting automated recovery...'",
    "    bash Code-Buddy/bytebotd/ops/recover_bytebot.sh",
    "    echo '‚è≥ Rechecking after recovery...'",
    "    sleep 5",
    "    retry=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:9991/api/ops/health)",
    "    if [ \"$retry\" -eq 200 ]; then",
    "      result='‚úÖ Bytebot Agent recovered on port 9991.'",
    "      port=9991",
    "    else",
    "      retry2=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:9990/api/ops/health)",
    "      if [ \"$retry2\" -eq 200 ]; then",
    "        result='‚úÖ Bytebot Agent recovered on port 9990.'",
    "        port=9990",
    "      else",
    "        result='üö® Recovery attempt failed. Manual intervention required.'",
    "      fi",
    "    fi",
    "  fi",
    "fi",
    "echo 'üìä Gathering health summary...'",
    "health_output=$(python3 Code-Buddy/bytebotd/ops/bytebot_health.py 2>/dev/null || echo '‚ö†Ô∏è bytebot_health.py not found or failed.')",
    "echo 'üì¢ Preparing Discord payload...'",
    "if [ -z \"$BYTEBOT_DISCORD_WEBHOOK\" ]; then echo '‚ö†Ô∏è BYTEBOT_DISCORD_WEBHOOK not set. Skipping Discord notification.'; else payload=$(jq -n --arg content \"**Bytebot Autonomous Report**\" --arg desc \"\\n$result\\n\\n**Metrics Summary:**\\n\\n$health_output\\n\\nHost: $(hostname)\\nTimestamp: $(date)\" '{embeds: [{title: \"Bytebot Mission Control Report\", description: $desc, color: 5814783}], content: $content}'); curl -H 'Content-Type: application/json' -X POST -d \"$payload\" \"$BYTEBOT_DISCORD_WEBHOOK\" -s -o /dev/null && echo '‚úÖ Report sent to Discord with metrics.' || echo '‚ö†Ô∏è Failed to post to Discord.'; fi",
    "echo 'üì° Bytebot Agent verified operational on port '$port'. Mission Control standing by.'"
  ]
}