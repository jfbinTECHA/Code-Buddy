{"version":3,"file":"normalize-endpoint.js","sourceRoot":"","sources":["../../../src/mcp/utils/normalize-endpoint.ts"],"names":[],"mappings":";;AAGA,8CA4BC;AA5BD,SAAgB,iBAAiB,CAAC,QAAwB;IACxD,IAAI,CAAC;QACH,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,OAAO,EAAE,CAAC;QACZ,CAAC;QAGD,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;QAExE,IAAI,aAAa,EAAE,CAAC;YAElB,MAAM,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACjD,MAAM,cAAc,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrD,MAAM,MAAM,GAAG,QAAQ,GAAG,cAAc,CAAC;YACzC,OAAO,MAAM,CAAC;QAChB,CAAC;aAAM,CAAC;YAEN,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACjD,MAAM,MAAM,GAAG,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC;gBACvC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrB,CAAC,CAAC,UAAU,CAAC;YACf,OAAO,MAAM,CAAC;QAChB,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,OAAO,EAAE,CAAC;IACZ,CAAC;AACH,CAAC","sourcesContent":["/**\n * Normalizes an endpoint by removing double slashes and ensuring it does not start with a slash.\n */\nexport function normalizeEndpoint(endpoint?: string | null): string {\n  try {\n    if (!endpoint) {\n      return '';\n    }\n\n    // Check if the endpoint has a protocol\n    const protocolMatch = endpoint.match(/^([a-zA-Z][a-zA-Z0-9+.-]*):\\/\\//);\n\n    if (protocolMatch) {\n      // Has protocol: preserve protocol slashes, collapse slashes in the path\n      const protocol = protocolMatch[0]; // e.g., \"http://\"\n      const pathPart = endpoint.slice(protocol.length);\n      const normalizedPath = pathPart.replace(/\\/+/g, '/');\n      const result = protocol + normalizedPath;\n      return result;\n    } else {\n      // No protocol: collapse all slashes and remove leading slash\n      const normalized = endpoint.replace(/\\/+/g, '/');\n      const result = normalized.startsWith('/')\n        ? normalized.slice(1)\n        : normalized;\n      return result;\n    }\n  } catch (error) {\n    console.error('Error normalizing endpoint:', error);\n    return '';\n  }\n}\n"]}