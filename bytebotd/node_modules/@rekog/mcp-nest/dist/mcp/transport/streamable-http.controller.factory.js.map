{"version":3,"file":"streamable-http.controller.factory.js","sourceRoot":"","sources":["../../../src/mcp/transport/streamable-http.controller.factory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAuBA,wEAiDC;AAxED,2CAcwB;AAGxB,yFAAmF;AACnF,oEAAgE;AAKhE,SAAgB,8BAA8B,CAC5C,QAAgB,EAChB,SAAiB,EACjB,SAA8B,EAAE,EAChC,aAA+B,EAAE;;IAEjC,IAEM,wBAAwB,gCAF9B,MAEM,wBAAwB;QAG5B,YACyB,OAAmC,EAC1C,wBAAkD;YAD3B,YAAO,GAAP,OAAO,CAAY;YAC1C,6BAAwB,GAAxB,wBAAwB,CAA0B;YAJpD,WAAM,GAAG,IAAI,eAAM,CAAC,0BAAwB,CAAC,IAAI,CAAC,CAAC;QAKhE,CAAC;QAOE,AAAN,KAAK,CAAC,iBAAiB,CACd,GAAQ,EACR,GAAQ,EACP,IAAa;YAErB,MAAM,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACxE,CAAC;QAOK,AAAN,KAAK,CAAC,gBAAgB,CAAQ,GAAQ,EAAS,GAAQ;YACrD,MAAM,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACjE,CAAC;QAOK,AAAN,KAAK,CAAC,mBAAmB,CAAQ,GAAQ,EAAS,GAAQ;YACxD,MAAM,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACpE,CAAC;KACF,CAAA;IAzBO;QAFL,IAAA,aAAI,EAAC,GAAG,IAAA,sCAAiB,EAAC,GAAG,SAAS,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAC;QACxD,IAAA,kBAAS,EAAC,GAAG,MAAM,CAAC;QAElB,WAAA,IAAA,YAAG,GAAE,CAAA;QACL,WAAA,IAAA,YAAG,GAAE,CAAA;QACL,WAAA,IAAA,aAAI,GAAE,CAAA;;;;qEAGR;IAOK;QAFL,IAAA,YAAG,EAAC,GAAG,IAAA,sCAAiB,EAAC,GAAG,SAAS,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAC;QACvD,IAAA,kBAAS,EAAC,GAAG,MAAM,CAAC;QACG,WAAA,IAAA,YAAG,GAAE,CAAA;QAAY,WAAA,IAAA,YAAG,GAAE,CAAA;;;;oEAE7C;IAOK;QAFL,IAAA,eAAM,EAAC,GAAG,IAAA,sCAAiB,EAAC,GAAG,SAAS,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAC;QAC1D,IAAA,kBAAS,EAAC,GAAG,MAAM,CAAC;QACM,WAAA,IAAA,YAAG,GAAE,CAAA;QAAY,WAAA,IAAA,YAAG,GAAE,CAAA;;;;uEAEhD;IArCG,wBAAwB;QAF7B,IAAA,mBAAU,GAAE;QACZ,IAAA,wBAAe,EAAC,GAAG,UAAU,CAAC;QAK1B,WAAA,IAAA,eAAM,EAAC,aAAa,CAAC,CAAA;iDACoB,sDAAwB;OALhE,wBAAwB,CAsC7B;IAED,OAAO,wBAAwB,CAAC;AAClC,CAAC","sourcesContent":["import {\n  Body,\n  CanActivate,\n  Controller,\n  Delete,\n  Get,\n  Inject,\n  Logger,\n  Post,\n  Req,\n  Res,\n  Type,\n  UseGuards,\n  applyDecorators,\n} from '@nestjs/common';\n\nimport { McpOptions } from '../interfaces';\nimport { McpStreamableHttpService } from '../services/mcp-streamable-http.service';\nimport { normalizeEndpoint } from '../utils/normalize-endpoint';\n\n/**\n * Creates a controller for handling Streamable HTTP connections and tool executions\n */\nexport function createStreamableHttpController(\n  endpoint: string,\n  apiPrefix: string,\n  guards: Type<CanActivate>[] = [],\n  decorators: ClassDecorator[] = [],\n) {\n  @Controller()\n  @applyDecorators(...decorators)\n  class StreamableHttpController {\n    public readonly logger = new Logger(StreamableHttpController.name);\n\n    constructor(\n      @Inject('MCP_OPTIONS') public readonly options: McpOptions,\n      public readonly mcpStreamableHttpService: McpStreamableHttpService,\n    ) {}\n\n    /**\n     * Main HTTP endpoint for both initialization and subsequent requests\n     */\n    @Post(`${normalizeEndpoint(`${apiPrefix}/${endpoint}`)}`)\n    @UseGuards(...guards)\n    async handlePostRequest(\n      @Req() req: any,\n      @Res() res: any,\n      @Body() body: unknown,\n    ): Promise<void> {\n      await this.mcpStreamableHttpService.handlePostRequest(req, res, body);\n    }\n\n    /**\n     * GET endpoint for SSE streams - not supported in stateless mode\n     */\n    @Get(`${normalizeEndpoint(`${apiPrefix}/${endpoint}`)}`)\n    @UseGuards(...guards)\n    async handleGetRequest(@Req() req: any, @Res() res: any): Promise<void> {\n      await this.mcpStreamableHttpService.handleGetRequest(req, res);\n    }\n\n    /**\n     * DELETE endpoint for terminating sessions - not supported in stateless mode\n     */\n    @Delete(`${normalizeEndpoint(`${apiPrefix}/${endpoint}`)}`)\n    @UseGuards(...guards)\n    async handleDeleteRequest(@Req() req: any, @Res() res: any): Promise<void> {\n      await this.mcpStreamableHttpService.handleDeleteRequest(req, res);\n    }\n  }\n\n  return StreamableHttpController;\n}\n"]}