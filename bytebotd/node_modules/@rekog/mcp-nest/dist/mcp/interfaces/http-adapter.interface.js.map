{"version":3,"file":"http-adapter.interface.js","sourceRoot":"","sources":["../../../src/mcp/interfaces/http-adapter.interface.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Generic HTTP request interface that abstracts Express and Fastify request objects\n */\nexport interface HttpRequest {\n  url?: string;\n  method?: string;\n  headers: Record<string, string | string[] | undefined>;\n  query: Record<string, any>;\n  body?: any;\n  params?: Record<string, string>;\n  /**\n   * Get a header value by name (case-insensitive)\n   */\n  get?(name: string): string | undefined;\n  /**\n   * Access to the raw framework-specific request object\n   */\n  raw?: any;\n}\n\n/**\n * Generic HTTP response interface that abstracts Express and Fastify response objects\n */\nexport interface HttpResponse {\n  /**\n   * Set the response status code\n   */\n  status(code: number): this;\n\n  /**\n   * Send a JSON response\n   */\n  json(body: any): this | void;\n\n  /**\n   * Send a text response\n   */\n  send(body: string): this | void;\n\n  /**\n   * Write data to the response stream\n   */\n  write(chunk: any): boolean | void;\n\n  /**\n   * Set a response header\n   */\n  setHeader?(name: string, value: string | string[]): void;\n\n  /**\n   * Check if headers have been sent\n   */\n  readonly headersSent?: boolean;\n\n  /**\n   * Check if the response is writable\n   */\n  readonly writable?: boolean;\n\n  /**\n   * Check if the response is closed\n   */\n  readonly closed?: boolean;\n\n  /**\n   * Listen for events\n   */\n  on?(event: string, listener: (...args: any[]) => void): void;\n\n  /**\n   * Access to the raw framework-specific response object\n   */\n  raw?: any;\n}\n\n/**\n * HTTP adapter interface for framework-specific implementations\n */\nexport interface HttpAdapter {\n  /**\n   * Adapt a framework-specific request to the generic HttpRequest interface\n   */\n  adaptRequest(req: any): HttpRequest;\n\n  /**\n   * Adapt a framework-specific response to the generic HttpResponse interface\n   */\n  adaptResponse(res: any): HttpResponse;\n}\n"]}