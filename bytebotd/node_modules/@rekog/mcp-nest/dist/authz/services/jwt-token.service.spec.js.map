{"version":3,"file":"jwt-token.service.spec.js","sourceRoot":"","sources":["../../../src/authz/services/jwt-token.service.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAsD;AACtD,kDAAoC;AACpC,2DAAsD;AAEtD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,MAAM,WAAW,GAAG;QAClB,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,SAAS,EAAE,kBAAkB;QAC7B,SAAS,EAAE,kBAAkB;QAC7B,uBAAuB,EAAE,IAAI;QAC7B,wBAAwB,EAAE,IAAI;QAC9B,mBAAmB,EAAE,IAAI;KACnB,CAAC;IAET,IAAI,OAAwB,CAAC;IAE7B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,MAAM,GAAkB,MAAM,cAAI,CAAC,mBAAmB,CAAC;YAC3D,SAAS,EAAE;gBACT,mCAAe;gBACf;oBACE,OAAO,EAAE,sBAAsB;oBAC/B,QAAQ,EAAE,WAAW;iBACtB;aACF;SACF,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,mCAAe,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,MAAM,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;QAC9E,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC;QAC3C,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAmB,CAAC;QAClE,MAAM,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAc,CAAmB,CAAC;QAC3E,MAAM,CAAC,OAAO,CAAC,GAAI,GAAG,OAAO,CAAC,GAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACtD,MAAM,CAAC,cAAc,CAAC,GAAI,GAAG,cAAc,CAAC,GAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACzE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,MAAM,GAAkB,MAAM,cAAI,CAAC,mBAAmB,CAAC;YAC3D,SAAS,EAAE;gBACT,mCAAe;gBACf;oBACE,OAAO,EAAE,sBAAsB;oBAC/B,QAAQ,EAAE,EAAE,GAAG,WAAW,EAAE,mBAAmB,EAAE,KAAK,EAAE;iBACzD;aACF;SACF,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,MAAM,gBAAgB,GAAG,MAAM,CAAC,GAAG,CAAC,mCAAe,CAAC,CAAC;QACrD,MAAM,MAAM,GAAG,gBAAgB,CAAC,iBAAiB,CAC/C,OAAO,EACP,SAAS,EACT,EAAE,EACF,WAAW,CACZ,CAAC;QACF,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport * as jwt from 'jsonwebtoken';\nimport { JwtTokenService } from './jwt-token.service';\n\ndescribe('JwtTokenService', () => {\n  const baseOptions = {\n    jwtSecret: 'a'.repeat(32),\n    jwtIssuer: 'http://localhost',\n    serverUrl: 'http://localhost',\n    jwtAccessTokenExpiresIn: '2h',\n    jwtRefreshTokenExpiresIn: '3d',\n    enableRefreshTokens: true,\n  } as any;\n\n  let service: JwtTokenService;\n\n  beforeEach(async () => {\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        JwtTokenService,\n        {\n          provide: 'OAUTH_MODULE_OPTIONS',\n          useValue: baseOptions,\n        },\n      ],\n    }).compile();\n\n    service = module.get(JwtTokenService);\n  });\n\n  it('generates tokens with configured expirations', () => {\n    const tokens = service.generateTokenPair('user1', 'client1', '', 'resource1');\n    expect(tokens.refresh_token).toBeDefined();\n    const decoded = jwt.decode(tokens.access_token) as jwt.JwtPayload;\n    const decodedRefresh = jwt.decode(tokens.refresh_token!) as jwt.JwtPayload;\n    expect(decoded.exp! - decoded.iat!).toBe(2 * 60 * 60);\n    expect(decodedRefresh.exp! - decodedRefresh.iat!).toBe(3 * 24 * 60 * 60);\n    expect(tokens.expires_in).toBe(2 * 60 * 60);\n  });\n\n  it('can disable refresh tokens', async () => {\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        JwtTokenService,\n        {\n          provide: 'OAUTH_MODULE_OPTIONS',\n          useValue: { ...baseOptions, enableRefreshTokens: false },\n        },\n      ],\n    }).compile();\n\n    const serviceNoRefresh = module.get(JwtTokenService);\n    const tokens = serviceNoRefresh.generateTokenPair(\n      'user1',\n      'client1',\n      '',\n      'resource1',\n    );\n    expect(tokens.refresh_token).toBeUndefined();\n    expect(tokens.expires_in).toBe(2 * 60 * 60);\n  });\n});\n\n"]}