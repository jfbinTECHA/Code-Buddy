{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/authz/interfaces/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AACA,wEAAsD;AACtD,kEAAgD","sourcesContent":["// Re-export main interfaces\nexport * from '../providers/oauth-provider.interface';\nexport * from '../stores/oauth-store.interface';\n\n/**\n * @fileoverview Store Configuration Examples\n *\n * The `storeConfiguration` property in `OAuthUserModuleOptions` allows you to configure\n * how OAuth sessions, authorization codes, and client information are stored.\n *\n * @example\n * // Option 1: Memory Store (default)\n * // Just omit storeConfiguration or explicitly set it\n * storeConfiguration: { type: 'memory' }\n *\n * @example\n * // Option 2: Custom Store Implementation\n * import { MyCustomStore } from './my-custom-store';\n * storeConfiguration: {\n *   type: 'custom',\n *   store: new MyCustomStore()\n * }\n *\n * @example\n * // Option 3: TypeORM Persistent Storage\n * storeConfiguration: {\n *   type: 'typeorm',\n *   options: {\n *     type: 'sqlite',\n *     database: './oauth.db',\n *     synchronize: true,\n *     logging: false\n *   }\n * }\n *\n * @example\n * // Option 3b: TypeORM with PostgreSQL\n * storeConfiguration: {\n *   type: 'typeorm',\n *   options: {\n *     type: 'postgres',\n *     host: process.env.DB_HOST || 'localhost',\n *     port: parseInt(process.env.DB_PORT) || 5432,\n *     username: process.env.DB_USERNAME || 'postgres',\n *     password: process.env.DB_PASSWORD || 'password',\n *     database: process.env.DB_NAME || 'oauth_db',\n *     synchronize: process.env.NODE_ENV !== 'production',\n *     logging: process.env.NODE_ENV === 'development'\n *   }\n * }\n */\n"]}