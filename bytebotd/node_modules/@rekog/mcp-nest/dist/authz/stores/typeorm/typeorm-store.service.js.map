{"version":3,"file":"typeorm-store.service.js","sourceRoot":"","sources":["../../../../src/authz/stores/typeorm/typeorm-store.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { randomBytes, createHash } from 'crypto';\nimport {\n  OAuthClientEntity,\n  AuthorizationCodeEntity,\n  OAuthSessionEntity,\n  OAuthUserProfileEntity,\n} from './entities';\nimport { OAUTH_TYPEORM_CONNECTION_NAME } from './constants';\nimport {\n  OAuthSession,\n  OAuthUserProfile,\n} from '../../providers/oauth-provider.interface';\nimport {\n  AuthorizationCode,\n  IOAuthStore,\n  OAuthClient,\n} from '../oauth-store.interface';\n\n@Injectable()\nexport class TypeOrmStore implements IOAuthStore {\n  constructor(\n    @InjectRepository(OAuthClientEntity, OAUTH_TYPEORM_CONNECTION_NAME)\n    private readonly clientRepository: Repository<OAuthClientEntity>,\n    @InjectRepository(AuthorizationCodeEntity, OAUTH_TYPEORM_CONNECTION_NAME)\n    private readonly authCodeRepository: Repository<AuthorizationCodeEntity>,\n    @InjectRepository(OAuthSessionEntity, OAUTH_TYPEORM_CONNECTION_NAME)\n    private readonly sessionRepository: Repository<OAuthSessionEntity>,\n    @InjectRepository(OAuthUserProfileEntity, OAUTH_TYPEORM_CONNECTION_NAME)\n    private readonly userProfileRepository: Repository<OAuthUserProfileEntity>,\n  ) {}\n\n  // Client management\n  async storeClient(client: OAuthClient): Promise<OAuthClient> {\n    const savedClient = await this.clientRepository.save(client);\n    return savedClient;\n  }\n\n  async getClient(client_id: string): Promise<OAuthClient | undefined> {\n    return (\n      (await this.clientRepository.findOne({ where: { client_id } })) ??\n      undefined\n    );\n  }\n\n  async findClient(client_name: string): Promise<OAuthClient | undefined> {\n    return (\n      (await this.clientRepository.findOne({ where: { client_name } })) ??\n      undefined\n    );\n  }\n\n  // Authorization code management\n  async storeAuthCode(code: AuthorizationCode): Promise<void> {\n    await this.authCodeRepository.save(code);\n  }\n\n  async getAuthCode(code: string): Promise<AuthorizationCode | undefined> {\n    const authCode = await this.authCodeRepository.findOne({ where: { code } });\n    // Check if expired\n    if (authCode && authCode.expires_at < Date.now()) {\n      await this.authCodeRepository.delete({ code });\n      return undefined;\n    }\n    return authCode ?? undefined;\n  }\n\n  async removeAuthCode(code: string): Promise<void> {\n    await this.authCodeRepository.delete({ code });\n  }\n\n  // OAuth session management\n  async storeOAuthSession(\n    sessionId: string,\n    session: OAuthSession,\n  ): Promise<void> {\n    await this.sessionRepository.save({ ...session, sessionId });\n  }\n\n  async getOAuthSession(sessionId: string): Promise<OAuthSession | undefined> {\n    const session = await this.sessionRepository.findOne({\n      where: { sessionId },\n    });\n    if (session && session.expiresAt < Date.now()) {\n      await this.sessionRepository.delete({ sessionId });\n      return undefined;\n    }\n    return session ?? undefined;\n  }\n\n  async removeOAuthSession(sessionId: string): Promise<void> {\n    await this.sessionRepository.delete({ sessionId });\n  }\n\n  generateClientId(client: OAuthClient): string {\n    // Create deterministic client ID based on name + random salt\n    const normalizedName = client.client_name\n      .toLowerCase()\n      .replace(/[^a-z0-9]/g, '');\n    const salt = randomBytes(4).toString('hex');\n    return `${normalizedName}_${salt}`;\n  }\n\n  // User profile management\n  async upsertUserProfile(\n    profile: OAuthUserProfile,\n    provider: string,\n  ): Promise<string> {\n    // Try find by provider+provider_user_id\n    const existing = await this.userProfileRepository.findOne({\n      where: { provider, provider_user_id: profile.id },\n    });\n    if (existing) {\n      // Update fields that may change\n      existing.username = profile.username;\n      existing.email = profile.email;\n      existing.displayName = profile.displayName;\n      existing.avatarUrl = profile.avatarUrl;\n      existing.raw = profile.raw ? JSON.stringify(profile.raw) : existing.raw;\n      await this.userProfileRepository.save(existing);\n      return existing.profile_id;\n    }\n    // Create new\n    const entity = this.userProfileRepository.create({\n      profile_id: this.generateProfileId(provider, profile.id),\n      provider_user_id: profile.id,\n      provider,\n      username: profile.username,\n      email: profile.email,\n      displayName: profile.displayName,\n      avatarUrl: profile.avatarUrl,\n      raw: profile.raw ? JSON.stringify(profile.raw) : undefined,\n    });\n    const saved = await this.userProfileRepository.save(entity);\n    return saved.profile_id;\n  }\n\n  async getUserProfileById(\n    profileId: string,\n  ): Promise<\n    (OAuthUserProfile & { profile_id: string; provider: string }) | undefined\n  > {\n    const entity = await this.userProfileRepository.findOne({\n      where: { profile_id: profileId },\n    });\n    if (!entity) return undefined;\n    return {\n      profile_id: entity.profile_id,\n      provider: entity.provider,\n      id: entity.provider_user_id,\n      username: entity.username,\n      email: entity.email,\n      displayName: entity.displayName,\n      avatarUrl: entity.avatarUrl,\n      raw: entity.raw ? JSON.parse(entity.raw) : undefined,\n    };\n  }\n\n  private generateProfileId(provider: string, providerUserId: string): string {\n    const input = `${provider}:${providerUserId}`;\n    return createHash('sha256').update(input).digest('hex').slice(0, 24);\n  }\n}\n"]}