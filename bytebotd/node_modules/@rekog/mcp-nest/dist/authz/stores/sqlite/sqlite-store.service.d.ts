import { OAuthSession } from '../../providers/oauth-provider.interface';
import { AuthorizationCode, IOAuthStore, OAuthClient } from '../oauth-store.interface';
export declare class SQLiteStore implements IOAuthStore {
    private sqlite;
    constructor(databasePath?: string);
    private initializeTables;
    storeClient(client: OAuthClient): Promise<OAuthClient>;
    getClient(client_id: string): Promise<OAuthClient | undefined>;
    findClient(client_name: string): Promise<OAuthClient | undefined>;
    storeAuthCode(code: AuthorizationCode): Promise<void>;
    getAuthCode(code: string): Promise<AuthorizationCode | undefined>;
    removeAuthCode(code: string): Promise<void>;
    storeOAuthSession(sessionId: string, session: OAuthSession): Promise<void>;
    getOAuthSession(sessionId: string): Promise<OAuthSession | undefined>;
    removeOAuthSession(sessionId: string): Promise<void>;
    generateClientId(client: OAuthClient): string;
}
//# sourceMappingURL=sqlite-store.service.d.ts.map