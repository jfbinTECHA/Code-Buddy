{"version":3,"file":"mcp-tool.interface.js","sourceRoot":"","sources":["../../src/interfaces/mcp-tool.interface.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  CallToolRequestSchema,\n  GetPromptRequestSchema,\n  Progress,\n  ReadResourceRequestSchema,\n} from '@modelcontextprotocol/sdk/types.js';\nimport { z } from 'zod';\nimport { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\n\nexport type Literal = boolean | null | number | string | undefined;\n\nexport type SerializableValue =\n  | Literal\n  | SerializableValue[]\n  | { [key: string]: SerializableValue };\n\nexport type McpRequestSchema =\n  | typeof CallToolRequestSchema\n  | typeof ReadResourceRequestSchema\n  | typeof GetPromptRequestSchema;\n\nexport type McpRequest = z.infer<McpRequestSchema>;\n\n/**\n * Enhanced execution context that includes user information\n */\nexport type Context = {\n  reportProgress: (progress: Progress) => Promise<void>;\n  log: {\n    debug: (message: string, data?: SerializableValue) => void;\n    error: (message: string, data?: SerializableValue) => void;\n    info: (message: string, data?: SerializableValue) => void;\n    warn: (message: string, data?: SerializableValue) => void;\n  };\n  mcpServer: McpServer;\n  mcpRequest: McpRequest;\n};\n"]}